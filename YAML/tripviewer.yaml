apiVersion: apps/v1
kind: Deployment
metadata:
  name: tripviewer-deployment
  namespace: web
  labels:
    app: tripviewer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tripviewer
  template:
    metadata:
      labels:
        app: tripviewer
    spec:
      containers:
      - name: tripviewer
        image: registryidw6538.azurecr.io/tripinsights/tripviewer:1.0
        #imagePullPolicy: Always 
        ports:
        - containerPort: 80
        env:
        - name: TRIPS_API_ENDPOINT
          value: "http://trips-service.api:8080"
        - name: USERPROFILE_API_ENDPOINT
          value: "http://userprofile-service.api:8080"
---
apiVersion: v1
kind: Service
metadata:
  name: tripviewer-service
  namespace: web
  labels:
    app: tripviewer
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: tripviewer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tripviewer-ingress
  namespace: web

  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: 4cc0c5dafc854b8785bc.eastasia.aksapp.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: tripviewer-service
            port: 
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service: 
            name: tripviewer-service
            port: 
              number: 80
      - path: /Trip
        pathType: Prefix
        backend:
          service: 
            name: tripviewer-service
            port: 
              number: 80
      - path: /UserProfile
        pathType: Prefix
        backend:
          service: 
            name: tripviewer-service
            port: 
              number: 80